// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @map("_id")
  username     String        @unique
  email        String        @unique
  password     String
  fullName     String?
  transactions Transaction[]
  Review       Review[]
}

model Product {
  id           Int           @id @map("_id")
  name         String
  description  String
  price        Float
  image        String?
  stock        Int
  category     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
  Category     Category?     @relation(fields: [categoryId], references: [id])
  categoryId   Int?
  Provider     Provider?     @relation(fields: [providerId], references: [id])
  providerId   Int?
  Review       Review[]
}

model Transaction {
  id        Int      @id @map("_id")
  userId    Int
  productId Int
  quantity  Int
  total     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model Category {
  id       Int       @id @map("_id")
  name     String
  products Product[]
}

model Provider {
  id       Int       @id @map("_id")
  name     String
  products Product[]
}

model Review {
  id        Int      @id @map("_id")
  productId Int
  userId    Int
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])
  user    User    @relation(fields: [userId], references: [id])
}
