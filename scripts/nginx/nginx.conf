server {
    listen 80;
    listen [::]:80;
    server_name host.docker.internal;
    server_tokens off;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name host.docker.internal;
    server_tokens off;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/inno_nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/inno_nginx.key;

    # location /.well-known/acme-challenge/ {
    #     root /var/www/certbot;
    # }

    location / {
        # Forward requests to React app running on port 3000
        proxy_pass http://host.docker.internal:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /static {
        alias /usr/share/nginx/html/static;
        # Add other settings as needed, such as caching directives
    }

    location /api {
        # Forward requests to backend running on port 8080
        proxy_pass http://host.docker.internal:8080;
        # Optional: If backend serves static files or has other routes, adjust accordingly
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}